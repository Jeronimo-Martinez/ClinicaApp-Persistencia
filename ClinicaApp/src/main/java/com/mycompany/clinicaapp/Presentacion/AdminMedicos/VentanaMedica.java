/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.clinicaapp.Presentacion.AdminMedicos;

import com.mycompany.clinicaapp.Interfaces.IInterfazAdminMedica;
import com.mycompany.clinicaapp.Interfaces.IMedicoService;
import com.mycompany.clinicaapp.Modelos.Medico;
import com.mycompany.clinicaapp.Utilidades.AdminMedica.ActivadorJtableMedicoBotones;
import com.mycompany.clinicaapp.Utilidades.AdminMedica.EventosParaBotones;
import com.mycompany.clinicaapp.Utilidades.AdminMedica.RenderizadoTablaMedico;
import java.awt.Color;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author johan
 */
public class VentanaMedica extends javax.swing.JPanel {
   private final IMedicoService medicoService;
   private final IInterfazAdminMedica interfazAdmin;
   List<Medico> medicos;
   public void llenarFilas (){
       medicos = medicoService.listaMedicos();
        

        DefaultTableModel model = (DefaultTableModel) tablaMedica.getModel();
        model.setRowCount(0);
        for (Medico m : medicos) {
            model.addRow(new Object[]{
                m.getNombre(),
                m.getCedula(),
                m.getEspecialidad().getNombre(),});
        }
   }
   
    public VentanaMedica(IMedicoService medicoService, IInterfazAdminMedica interfazAdmin) {
        this.interfazAdmin=interfazAdmin;
        this.medicoService=medicoService;
        this.medicos=medicoService.listaMedicos();
        initComponents();
        llenarFilas();
        

        setBorder(BorderFactory.createTitledBorder(
                BorderFactory.createEtchedBorder(), "Administrar médicos",
                TitledBorder.LEFT, TitledBorder.TOP
        ));
        EventosParaBotones evento;
       evento = new EventosParaBotones() {
           
           
           
           @Override
           public void clickEditar(int row) {
               
               Medico medico = medicoService.listaMedicos().get(row);
               VentanaEditarMedico panel = new VentanaEditarMedico(medico, medicoService, interfazAdmin);
               panel.setSize(VentanaMedica.this.getSize());
               panel.setLocation(0, 0);
               java.awt.Window window = SwingUtilities.getWindowAncestor(VentanaMedica.this);
               if (window instanceof JFrame frame) {
                   
                   frame.setContentPane(panel);
                   frame.revalidate();
                   frame.repaint();
               }
           }
           
           @Override
           public void clickEliminar(int row) {
               if (tablaMedica.isEditing()) {
                   tablaMedica.getCellEditor().stopCellEditing();
               }
               DefaultTableModel model = (DefaultTableModel) tablaMedica.getModel();
               model.removeRow(row);
               String cedula = (String) tablaMedica.getValueAt(row, 1);
               medicoService.eliminarMedico(cedula);
               
           }
       };

        tablaMedica.getColumnModel().getColumn(3).setCellRenderer(new RenderizadoTablaMedico());
        tablaMedica.getTableHeader().setReorderingAllowed(false);
        tablaMedica.setShowGrid(true);
        tablaMedica.setGridColor(Color.LIGHT_GRAY);
        tablaMedica.getColumnModel().getColumn(3).setCellEditor(new ActivadorJtableMedicoBotones(evento));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMedica = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        tablaMedica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cédula", "Especialidad", "Acción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaMedica.setRowHeight(40);
        tablaMedica.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(tablaMedica);
        if (tablaMedica.getColumnModel().getColumnCount() > 0) {
            tablaMedica.getColumnModel().getColumn(3).setPreferredWidth(40);
        }

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Volver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if(medicos.isEmpty()){
        
        JOptionPane.showMessageDialog(this, "Por favor agregue una especialidad.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
         VentanaAgregarMedico panel = new VentanaAgregarMedico(medicoService, interfazAdmin);
        panel.setSize(VentanaMedica.this.getSize());
        panel.setLocation(0, 0);
        java.awt.Window window = SwingUtilities.getWindowAncestor(VentanaMedica.this);
        if (window instanceof JFrame frame) {
            frame.setTitle("Agregar médico");
            frame.setContentPane(panel);
            frame.revalidate();
            frame.repaint();
        }
        }

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaMedica;
    // End of variables declaration//GEN-END:variables

    public void setContentPane(VentanaAgregarMedico panel) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
